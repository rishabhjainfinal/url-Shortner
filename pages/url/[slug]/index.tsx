import FormCustom from "@/components/FormCustom";
import FrameDiv from "@/components/FrameDiv";
import NavTop from "@/components/NavTop";
import NavUser from "@/components/NavUser";
import { Session } from "next-auth";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { getUrl } from "../../../utils/dbActions";
import { tableData } from "@/utils/types";
import { useEffect } from "react";

export default function Index({ data }: { data: tableData }) {
	const router = useRouter();
	// if user is not authenticated, redirect to signin page
	const { data: session } = useSession();
	useEffect(() => {
		if (!session) {
			router.push("/auth/signin");
		}
		// console.log(slug);
	});
	return (
		<>
			<Head>
				<title>Show Url</title>
				<meta name="description" content="Generated by Show Url" />
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<NavTop />
				<NavUser name={session?.user?.name as string} />
				<FrameDiv>
					{/* {!data ? ()} */}
					<h1 className="text-2xl">
						{data.slug} {"-->"} {data.url}
					</h1>
					{data ? (
						<>
							<FormCustom
								id={data.id}
								toUrl={data.url}
								code={data.slug}
								session={session as Session}
								action="Update"
							/>
							{/* delete btn for the entry and notify */}
							sdjkfhadsjk
						</>
					) : (
						<h1 className="text-2xl">404 - Entry Not Found</h1>
					)}
				</FrameDiv>
			</main>
		</>
	);
}

// get server side props and show last 5-10 post
export async function getServerSideProps(context: any) {
	const { slug } = context.query;
	const { data, error } = await getUrl(slug);
	// console.log(data);
	if (JSON.stringify(error) !== "{}") {
		return {
			props: {
				data: [],
			}, // will be passed to the page component as props
		};
	}

	return {
		props: {
			data: JSON.parse(JSON.stringify(data)),
		}, // will be passed to the page component as props
	};
}
